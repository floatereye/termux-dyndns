#!/bin/bash

set -euo pipefail  # Enable strict mode: exit on error, unset variables, and pipefail

echo "Checking and installing dependencies for Termux..."

# Install libllvm (GCC replacement) if not present
if ! pkg list-installed 2>/dev/null | grep -q '^libllvm'; then
    echo "Installing libllvm (GCC replacement)..."
    pkg install -y libllvm
fi

# Install libcurl if not present
if ! pkg list-installed 2>/dev/null | grep -q '^libcurl'; then
    echo "Installing libcurl..."
    pkg install -y libcurl
fi

# Install json-c if not present
if ! pkg list-installed 2>/dev/null | grep -q '^json-c'; then
    echo "Installing json-c..."
    pkg install -y json-c
fi

echo "Creating Makefile..."

cat <<'EOL' > Makefile
CC = clang  # Using clang, the default compiler for Termux (based on LLVM)
CFLAGS = -Wall -O2
LIBS = -lcurl -ljson-c
TARGET = dyndns
SRC = $(TARGET).c

all: $(TARGET)

$(TARGET): $(SRC)
	$(CC) $(CFLAGS) -o $(TARGET) $(SRC) $(LIBS)

clean:
	rm -f $(TARGET)
	rm -rf release/

release: all
	mkdir -p release/
	cp $(TARGET) release/
	strip -s release/$(TARGET)

install:
	install -m 755 $(TARGET) $(PREFIX)/bin/

uninstall:
	rm -f /data/data/com.termux/files/usr/bin/$(TARGET)
EOL

echo "Configuration complete. You can now run 'make' to build the project."
