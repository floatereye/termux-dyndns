#!/bin/sh

if [ -z "$PREFIX" ]; then
  PREFIX=PATH
fi

# Process command-line arguments
while [ "$#" -gt 0 ]; do
  case "$1" in
    --prefix=*)
      PREFIX="$(echo "$1" | cut -d'=' -f2)"
      ;;
    --help)
      echo "Usage: ./configure [--prefix=<install_path>]"
      exit 0
      ;;
    *)
      echo "Unknown option: $1"
      exit 1
      ;;
  esac
  shift
done

# Check for pkg-config
if ! command -v pkg-config >/dev/null 2>&1; then
  echo "[ERROR] pkg-config is not installed. Please install it."
  exit 1
fi

# Check for libcurl and json-c
if ! pkg-config --exists libcurl json-c; then
  if test -e "$PREFIX/bin/pkg"; then
    echo "Attempting to install dependencies for Termux..."

    # Install libllvm (GCC replacement) if not present
    if ! pkg list-installed 2>/dev/null | grep -q '^libllvm'; then
        echo "Installing libllvm (GCC replacement)..."
        pkg install -y libllvm
    fi

    # Install libcurl if not present
    if ! pkg list-installed 2>/dev/null | grep -q '^libcurl'; then
        echo "Installing libcurl..."
        pkg install -y libcurl
    fi

    # Install json-c if not present
    if ! pkg list-installed 2>/dev/null | grep -q '^json-c'; then
        echo "Installing json-c..."
        pkg install -y json-c
    fi
  else
    echo "[ERROR] Required libraries (libcurl, json-c) not found. Please install them."
    exit 1
  fi
fi

# Get compiler and linker flags
CFLAGS="$(pkg-config --cflags libcurl json-c) -Wall -O2"
LDFLAGS="$(pkg-config --libs libcurl json-c)"
CC=clang
TARGET=termux-ddns-freedns
SRC=${TARGET}.c

# Generate config.mk
cat > config.mk <<EOF
CC=$CC
CFLAGS=$CFLAGS
LDFLAGS=$LDFLAGS
TARGET=$TARGET
SRC=$SRC
PREFIX=$PREFIX
EOF

# Generate Makefile
cat > Makefile <<EOF
include config.mk

all: \$(TARGET)

\$(TARGET): \$(SRC)
  \$(CC) \$(CFLAGS) -o \$(TARGET) \$(SRC) \$(LDFLAGS)

clean:
  rm -f \$(TARGET)

install:
  install -m 755 \$(TARGET) \$(PREFIX)/bin/

uninstall:
  rm -f \$(PREFIX)/bin/\$(TARGET)
EOF

echo "Configuration successful. Makefile generated. Run 'make' to build."

